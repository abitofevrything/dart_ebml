import 'resolved_schema.dart';
import 'schema.dart';

const _maxInt = 0xffffffffffffffff;

const headerSchema = ResolvedSchema(
  docType: 'N/A',
  version: 0,
  ebml: 1,
  elements: [
    ResolvedSchemaElement(
      name: 'EBML',
      path: Path([PathAtom(name: 'EBML', isRecursive: false)]),
      id: 172351395,
      minOccurs: 1,
      maxOccurs: 1,
      range: null,
      length: null,
      defaultValue: null,
      type: ElementType.master,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
    ResolvedSchemaElement(
      name: 'EBMLVersion',
      path: Path([
        PathAtom(name: 'EBML', isRecursive: false),
        PathAtom(name: 'EBMLVersion', isRecursive: false),
      ]),
      id: 646,
      minOccurs: 1,
      maxOccurs: 1,
      range: Range.not(0),
      length: null,
      defaultValue: 1,
      type: ElementType.uinteger,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
    ResolvedSchemaElement(
      name: 'EBMLReadVersion',
      path: Path([
        PathAtom(name: 'EBML', isRecursive: false),
        PathAtom(name: 'EBMLReadVersion', isRecursive: false),
      ]),
      id: 759,
      minOccurs: 1,
      maxOccurs: 1,
      range: Range.exactly(1),
      length: null,
      defaultValue: 1,
      type: ElementType.uinteger,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
    ResolvedSchemaElement(
      name: 'EBMLMaxIDLength',
      path: Path([
        PathAtom(name: 'EBML', isRecursive: false),
        PathAtom(name: 'EBMLMaxIDLength', isRecursive: false),
      ]),
      id: 754,
      minOccurs: 1,
      maxOccurs: 1,
      range: Range.between(4, null, isLowerInclusive: true),
      length: null,
      defaultValue: 4,
      type: ElementType.uinteger,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
    ResolvedSchemaElement(
      name: 'EBMLMaxSizeLength',
      path: Path([
        PathAtom(name: 'EBML', isRecursive: false),
        PathAtom(name: 'EBMLMaxSizeLength', isRecursive: false),
      ]),
      id: 755,
      minOccurs: 1,
      maxOccurs: 1,
      range: Range.not(0),
      length: null,
      defaultValue: 8,
      type: ElementType.uinteger,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
    ResolvedSchemaElement(
      name: 'DocType',
      path: Path([
        PathAtom(name: 'EBML', isRecursive: false),
        PathAtom(name: 'DocType', isRecursive: false),
      ]),
      id: 642,
      minOccurs: 1,
      maxOccurs: 1,
      range: null,
      length: Range.between(0, null),
      defaultValue: null,
      type: ElementType.string,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
    ResolvedSchemaElement(
      name: 'DocTypeVersion',
      path: Path([
        PathAtom(name: 'EBML', isRecursive: false),
        PathAtom(name: 'DocTypeVersion', isRecursive: false),
      ]),
      id: 647,
      minOccurs: 1,
      maxOccurs: 1,
      range: null,
      length: Range.not(0),
      defaultValue: 1,
      type: ElementType.uinteger,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
    ResolvedSchemaElement(
      name: 'DocTypeReadVersion',
      path: Path([
        PathAtom(name: 'EBML', isRecursive: false),
        PathAtom(name: 'DocTypeReadVersion', isRecursive: false),
      ]),
      id: 645,
      minOccurs: 1,
      maxOccurs: 1,
      range: null,
      length: Range.not(0),
      defaultValue: 1,
      type: ElementType.uinteger,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
    ResolvedSchemaElement(
      name: 'DocTypeExtension',
      path: Path([
        PathAtom(name: 'EBML', isRecursive: false),
        PathAtom(name: 'DocTypeExtension', isRecursive: false),
      ]),
      id: 641,
      minOccurs: 0,
      maxOccurs: null,
      range: null,
      length: Range.not(0),
      defaultValue: 1,
      type: ElementType.master,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
    ResolvedSchemaElement(
      name: 'DocTypeExtensionName',
      path: Path([
        PathAtom(name: 'EBML', isRecursive: false),
        PathAtom(name: 'DocTypeExtension', isRecursive: false),
        PathAtom(name: 'DocTypeExtensionName', isRecursive: false),
      ]),
      id: 643,
      minOccurs: 1,
      maxOccurs: 1,
      range: null,
      length: Range.between(0, null),
      defaultValue: 1,
      type: ElementType.string,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
    ResolvedSchemaElement(
      name: 'DocTypeExtensionVersion',
      path: Path([
        PathAtom(name: 'EBML', isRecursive: false),
        PathAtom(name: 'DocTypeExtension', isRecursive: false),
        PathAtom(name: 'DocTypeExtensionVersion', isRecursive: false),
      ]),
      id: 644,
      minOccurs: 1,
      maxOccurs: 1,
      range: Range.not(0),
      length: null,
      defaultValue: 1,
      type: ElementType.uinteger,
      unknownSizeAllowed: false,
      recursive: false,
      recurring: false,
      minVer: 0,
      maxVer: _maxInt,
    ),
  ],
);

const crc32Element = ResolvedSchemaElement(
  name: 'CRC-32',
  path: Path([
    GlobalPlaceholder(minOccurrences: 1, maxOccurrences: null),
    PathAtom(name: 'CRC-32', isRecursive: false),
  ]),
  id: 63,
  minOccurs: 0,
  maxOccurs: 1,
  range: null,
  length: Range.exactly(4),
  defaultValue: null,
  type: ElementType.binary,
  unknownSizeAllowed: false,
  recursive: false,
  recurring: false,
  minVer: 0,
  maxVer: _maxInt,
);

const voidElement = ResolvedSchemaElement(
  name: 'Void',
  path: Path([
    GlobalPlaceholder(minOccurrences: null, maxOccurrences: null),
    PathAtom(name: 'Void', isRecursive: false),
  ]),
  id: 108,
  minOccurs: 0,
  maxOccurs: null,
  range: null,
  length: null,
  defaultValue: null,
  type: ElementType.binary,
  unknownSizeAllowed: false,
  recursive: false,
  recurring: false,
  minVer: 0,
  maxVer: _maxInt,
);
